1. Here is my java @Entity, just take a look:

@Data
@Entity
@NoArgsConstructor
@AllArgsConstructor
@FieldNameConstants
@TypeDef(name = "jsonb", typeClass = JsonBinaryType.class)
@Table(name = "classic_spf")
public class ClassicSpf {

    @Id
    @GeneratedValue(generator = "UUID")
    @GenericGenerator(name = "UUID", strategy = "org.hibernate.id.UUIDGenerator")
    @Column(updatable = false, nullable = false)
    @Type(type = "pg-uuid")
    private UUID id;

    @Column(nullable = false)
    private LocalDate assignmentDate;

    private OffsetDateTime eventDateTime;

    @Column(nullable = false)
    private Integer userAge;

	private Long requestsCount;

    private Double patientHeight;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private SpfStatus status;

    private String departmentName;

    @Column(nullable = false)
    private UUID userId;

    @Column(nullable = false)
    private Boolean editable;

    @Type(type = "jsonb")
    @Column(columnDefinition = "jsonb")
    private Object content;

    @Type(type = "jsonb")
    @Column(columnDefinition = "jsonb")
    private SpefCardDto spef;

    @JsonManagedReference
    @OneToMany(cascade = {CascadeType.ALL}, mappedBy = "protocol" , fetch = FetchType.LAZY)
    private List<ProtocolField> fields;

    @JsonManagedReference
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "shop_id", nullable = false)
    private Shop shop;

}

2. Now create new java @Entity, in the same style (using same types, same annotations etc)
New class should have following fields:

